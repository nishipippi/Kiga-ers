/* apps/web/src/app/page.module.css */

.pageContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100%; /* layout.tsxの .app-container が 100vh を担当するので、ここは100%で良いかも */
  padding: 0.75rem;
  user-select: none;
  width: 100%; /* layoutのmain-content-wrapperに合わせる */
  box-sizing: border-box;
}
@media (min-width: 640px) { .pageContainer { padding: 1rem; } }
@media (min-width: 768px) { .pageContainer { padding: 1.5rem; } }

.header {
  margin-top: 1rem;
  margin-bottom: 0.5rem;
  /* text-align: center; */ /* 中央揃えを解除 */
  width: 100%;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  flex-shrink: 0;
  display: flex; /* Flexboxを有効化 */
  justify-content: space-between; /* 要素間を均等に配置 */
  align-items: center; /* 要素を垂直方向中央に配置 */
}
@media (min-width: 640px) { .header { margin-top: 1.5rem; } }

.title {
  font-size: 1.875rem; /* text-3xl */
  line-height: 2.25rem;
  color: #2A3F54; /* プロジェクトのメインカラーに合わせて調整 */
  text-shadow: 0 1px 2px rgba(0,0,0,0.05);
}
@media (min-width: 640px) { .title { font-size: 2.25rem; line-height: 2.5rem; } }
@media (min-width: 768px) { .title { font-size: 3rem; line-height: 1; } }

.searchForm {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
  display: flex;
  gap: 0.5rem;
  width: 100%;
  max-width: 28rem; /* 検索フォームの最大幅 */
  margin-left: auto;
  margin-right: auto;
}

.searchBarContainer {
  position: relative;
  flex-grow: 1;
  display: flex;
  align-items: center;
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  height: 1.25rem;
  width: 1.25rem;
  color: rgba(42, 63, 84, 0.4);
  pointer-events: none;
}

.searchInput {
  width: 100%;
  padding: 0.625rem 0.75rem 0.625rem 2.5rem;
  font-size: 0.875rem;
  border: 1px solid rgba(42, 63, 84, 0.2);
  border-radius: 0.5rem;
  background-color: #FFFFFF;
  color: #2A3F54;
  outline: none;
  transition: border-color 0.2s, box-shadow 0.2s;
}
.searchInput:focus {
  border-color: #A9CADB; /* プロジェクトのアクセントカラーに合わせて調整 */
  box-shadow: 0 0 0 2px rgba(169, 202, 219, 0.5);
}
.searchInput::placeholder { color: rgba(42, 63, 84, 0.4); }
.searchInput::-webkit-search-cancel-button { cursor: pointer; }

.searchButton {
  padding: 0.625rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  background-color: #2A3F54; /* プロジェクトのメインボタンカラー */
  color: white;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: background-color 0.2s;
}
.searchButton:hover { background-color: rgba(42, 63, 84, 0.85); }

.subtitle {
  font-size: 0.75rem;
  line-height: 1rem;
  color: rgba(42, 63, 84, 0.7);
  margin-top: 0.25rem;
}
@media (min-width: 640px) { .subtitle { font-size: 0.875rem; line-height: 1.25rem; } }

.mainContentArea {
  position: relative; /* カードスタックの基準点 */
  width: 100%;
  max-width: 32rem; /* カードスタックの最大幅 */
  min-height: 60vh; /* カードが表示されるエリアの最小高さ */
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: 1rem; /* ヘッダーとの間隔 */
  padding-bottom: 1rem; /* フッターとの間隔を考慮 (フッターの高さ分など) */
  overflow: hidden; /* カードがはみ出さないように */
}
@media (min-width: 640px) { .mainContentArea { min-height: 65vh; padding-bottom: 1.5rem; } }
@media (min-width: 1280px) { .mainContentArea { max-width: 36rem; } }


/* PaperCard.module.css に移動したスタイルはここから削除 */
/* .card, .cardTitle, ... など */

/* スワイプ時のフィードバックオーバーレイの色 (PaperCard側でも定義可能) */
.feedbackPinkLike { background-color: #EC4899; } /* いいね時の色 */
.feedbackLimeDislike { background-color: #84CC16; } /* 興味なし時の色 */


.loadingMoreIndicator {
  position: fixed;
  bottom: calc(var(--footer-height, 60px) + 0.75rem); /* フッターの高さを考慮 */
  right: 0.75rem;
  background-color: rgba(42, 63, 84, 0.8);
  color: white;
  font-size: 0.625rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  animation: pulsePage 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; /* アニメーション名を変更 */
}
@media (min-width: 640px) { .loadingMoreIndicator { bottom: calc(var(--footer-height, 60px) + 1rem); right: 1rem; font-size: 0.75rem; padding: 0.25rem 0.75rem; } }

/* アニメーション (PaperCardに直接適用するものはPaperCard.module.cssへ) */
@keyframes pulsePage { /* PaperCard.module.cssのpulseと区別 */
  0%, 100% { opacity: 1; }
  50% { opacity: .5; }
}
@keyframes spinPage { /* PaperCard.module.cssのspinと区別 */
  to { transform: rotate(360deg); }
}

/* スワイプアニメーション (PaperCardへ渡すクラス名として定義) */
.animateFlyOutLeft {
  animation: flyOutLeftPage 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;
}
@keyframes flyOutLeftPage {
  0% { transform: translateX(0) rotate(0deg); opacity: 1; }
  100% { transform: translateX(-120vw) translateY(-10vh) rotate(-35deg); opacity: 0; }
}

.animateFlyOutRight {
  animation: flyOutRightPage 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;
}
@keyframes flyOutRightPage {
  0% { transform: translateX(0) rotate(0deg); opacity: 1; }
  100% { transform: translateX(120vw) translateY(-10vh) rotate(35deg); opacity: 0; }
}

.animateNextCardEnter {
  animation: nextCardEnterPage 0.4s ease-out forwards;
}
@keyframes nextCardEnterPage {
  0% { transform: scale(0.9) translateY(20px) rotate(0deg); opacity: 0.7; }
  100% { transform: scale(1) translateY(0) rotate(0deg); opacity: 1; }
}


/* ローディング状態表示 (PaperCardとは独立した要素) */
.loadingStateContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  width: 100%;
  flex-grow: 1; /* 空いているスペースを埋める */
}
.loadingStateBox {
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(4px);
  padding: 2rem;
  border-radius: 1rem;
  box-shadow: 0px 10px 30px rgba(42, 63, 84, 0.2), 0px 5px 10px rgba(42, 63, 84, 0.15);
}
@media (min-width: 640px) { .loadingStateBox { padding: 2.5rem; } }

.loadingStateTitle {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: #2A3F54;
}
@media (min-width: 640px) { .loadingStateTitle { font-size: 1.875rem; } }
@media (min-width: 768px) { .loadingStateTitle { font-size: 2.25rem; } }

.loadingSpinner {
  animation: spinPage 1s linear infinite; /* spinPageを使用 */
  border-radius: 9999px;
  height: 3rem;
  width: 3rem;
  border-top-width: 4px;
  border-bottom-width: 4px;
  border-color: #2A3F54;
  border-left-color: transparent;
  border-right-color: transparent;
  margin-left: auto;
  margin-right: auto;
}
@media (min-width: 640px) { .loadingSpinner { height: 4rem; width: 4rem; } }

.reloadButton {
  margin-top: 1.5rem;
  background-color: #2A3F54;
  color: white;
  font-weight: 600;
  padding: 0.625rem 1.5rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  transition: all 0.2s;
  box-shadow: 0px 5px 15px rgba(42, 63, 84, 0.15), 0px 2px 5px rgba(42, 63, 84, 0.1);
  border: none;
  cursor: pointer;
}
.reloadButton:hover { background-color: rgba(42, 63, 84, 0.8); transform: scale(1.05); }
@media (min-width: 640px) { .reloadButton { padding: 0.75rem 2rem; font-size: 1rem; } }

/* .clearSearchButton は PaperCard.module.css の .endOfFeedCard 内のボタンとして定義される想定 */

/* 新しく追加するボタンスタイル */
.iconLinkButton {
  display: inline-flex; /* アイコンを中央揃えにしやすくするため */
  align-items: center;
  justify-content: center;
  padding: 0.5rem; /* p-2 相当 */
  border-radius: 9999px; /* rounded-full 相当 */
  background-color: #FEF2F2; /* bg-pink-100 相当 */
  border: 1px solid #FECACA; /* border-pink-300 相当 */
  transition: background-color 0.2s, border-color 0.2s;
  text-decoration: none; /* 念のため下線を消す */
}

.iconLinkButton:hover {
  background-color: #FEE2E2; /* hover:bg-pink-200 相当 */
  border-color: #FCA5A5; /* hover:border-pink-400 相当 */
}

.iconLinkButton svg {
  width: 20px;
  height: 20px;
  fill: #F472B6; /* text-pink-500 相当 */
}

.textLinkButton {
  display: inline-block;
  padding: 0.5rem 0.75rem; /* px-3 py-2 相当 */
  border-radius: 0.375rem; /* rounded-md 相当 */
  font-size: 0.875rem; /* text-sm 相当 */
  font-weight: 500; /* font-medium 相当 */
  color: #BE185D; /* text-pink-700 相当 */
  background-color: #FEF2F2; /* bg-pink-100 相当 */
  border: 1px solid #FECACA; /* border-pink-300 相当 */
  transition: background-color 0.2s, border-color 0.2s, color 0.2s;
  text-decoration: none; /* 念のため下線を消す */
}

.textLinkButton:hover {
  background-color: #FEE2E2; /* hover:bg-pink-200 相当 */
  border-color: #FCA5A5; /* hover:border-pink-400 相当 */
  color: #9D174D; /* ホバー時のテキスト色も少し濃くする例 */
}

.headerLinksContainer { /* 右側の要素を囲むdiv用 */
  display: flex;
  align-items: center;
  gap: 1rem; /* space-x-4 相当 */
}
